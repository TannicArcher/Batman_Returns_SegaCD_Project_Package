; ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
; บ BATMAN RETURNS CD-ROM						   บ
; ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ

; MID BOSS - LEVEL 1 - "Jack in the box"

; --------------------------------------------------------------------------

JACK_SETUP	LEA	OBJ_JACK_CLOSE,A6
		JSR	O_OBJECT_SETUP	 
		BNE.S	.end
		MOVE.W	#10,OBJ_CNT7(A1)
		MOVE.L	#LOGIC_JACK,OBJ_LOGIC_DATA(A1)
		MOVE.W	#$60,OBJ_LMSPD(A1)
		MOVE.W	#SFX_EJACK_A,OBJ_FX0_SFXNUM(A1)
		MOVEQ	#0,D0
.end		RTS

; --------------------------------------------------------------------------

JACK_CLEAR	MOVE.L	OBJ_ADDR2(A1),A2
		JSR	O_DEALL_S
		MOVE.L	OBJ_ADDR3(A1),A2
		JSR	O_DEALL_S
		MOVE.L	OBJ_ADDR4(A1),A2
		JSR	O_DEALL_S
		JSR	O_CLEAR_S
		JSR	CLEAR_DAMAGE
		JSR	SFX3D_KILL
		JSR	SCADD_MIDBOSS
		JMP	ECL_KILL

; --------------------------------------------------------------------------

JACK_MOVE	BTST	#O_CLEAR,OBJ_FLAG0(A1)
		BNE.S	JACK_CLEAR

		JSR	LOGIC_CTRL
		JSR	SFX3D_SPEED	
		JSR	DAMAGE_CTRL
		JSR	EDAMAGE_METER

		BTST	#O_DEAD,OBJ_FLAG0(A1)
		BNE.S	.do_rotate
		MOVE.W	#SFX_TRUCKHORN_B,D0
		JSR	HORN_SFX

.do_rotate	TST.W	OBJ_CNT3(A1)
		BEQ.S	.do_lid
		SUBQ.W	#1,OBJ_CNT3(A1)
		BNE.S	.calc_rotate
		MOVE.W	#-2,OBJ_CNT4(A1)
		BRA.S	.do_lid
.calc_rotate	MOVE.W	#200+100,D1
		MOVE.W	OBJ_CNT1(A1),D3
		MOVE.W	OBJ_CNT0(A1),D2
		BMI.S	.cangle_n
.cangle_p	SUB.W	D1,D3
		ADD.W	D3,D2
		BPL.S	.cset
     		BRA.S	.csfx
.cangle_n	ADD.W	D1,D3
		ADD.W	D3,D2
		BMI.S	.cset

.csfx		MOVE.W	#SFX_JBSPRING_C,D0
		JSR	CSFX_ONESHOT_V

.cset		MOVE.W	D2,OBJ_CNT0(A1)
		MOVE.W	D3,OBJ_CNT1(A1)
		ASR.W	#3,D3
		SUB.W	D3,OBJ_CNT2(A1)

.do_lid		TST.W	OBJ_CNT4(A1)
		BEQ.S	.do_misc
		BPL.S	.open
		ADDQ.W	#1,OBJ_CNT4(A1)
		BNE.S	.do_misc
		MOVE.L	#OBJ_JACK_CLOSE,OBJ_ADDR0(A1)
		MOVE.W	#3,OBJ_CNT7(A1)	;Set min time.
		BCLR.B	#0,OBJ_FLAG1(A1)
		
		MOVE.W	#SFX_JBDOOR_A,D0
		JSR	CSFX_ONESHOT_V
		BRA.S	.do_misc

.open		SUBQ.W	#1,OBJ_CNT4(A1)

.do_misc	BTST.B	#0,OBJ_FLAG1(A1)
		BNE.S	.done
		MOVE.W	OBJ_DTOTAL(A1),D0
		BEQ.S	.done
		CMP.W	#$FFFC,D0
		BCS.S	.cont
     		MOVE.W	#$FFFF,OBJ_DTOTAL(A1)
		RTS

.cont		TST.B	OBJ_FLAG2(A1)
		BEQ.S	.fcheck
		SUBQ.B	#1,OBJ_FLAG2(A1)
		BEQ.S	JACK_BOD_SET
.end		RTS

.fcheck		CMP.W	#$600,OBJ_ZPOS(A1)
		BPL.S	.done
		CMP.W	#$100,OBJ_ZPOS(A1)
		BMI.S	.done
		SUBQ.W	#1,OBJ_CNT7(A1)
		BPL.S	.done
		
		BSET	#1,OBJ_FLAG1(A1)
		LEA	OBJECT_DATA,A3
		MOVE.L	OBJ_XPOS(A3),OBJ_ADDR5(A1)
		MOVE.W	OBJ_SPD(A3),OBJ_ADDR6(A1)
		MOVE.W	OBJ_ZPOS(A3),OBJ_ADDR6+2(A1)
		MOVE.B	#6,OBJ_FLASH0(A1)
		MOVE.B	#6,OBJ_FLAG2(A1)

.done		MOVE.L	OBJ_ADDR7(A1),D7
		BEQ.S	.end
		MOVE.L	D7,A1
		BRA	JACK_BOD_MOVE
    
; --------------------------------------------------------------------------

JACK_KILL	BTST.B	#0,OBJ_FLAG1(A1)
		BEQ.S	.end
		MOVE.W	#$FFFC,OBJ_DTOTAL(A1)
		SUB.L	#10,DAT_ADDR21(A5)
.end		RTS

; --------------------------------------------------------------------------

JACK_BOD_SET	MOVE.L	A1,A4
		LEA	OBJ_BOD,A6
		JSR	O_OBJECT_SETUP	 
		BEQ.S	.setup 
		RTS

.setup		MOVE.L	A1,OBJ_ADDR7(A4)
		MOVE.L	OBJ_XPOS(A4),OBJ_XPOS(A1)
		MOVE.W	OBJ_ZPOS(A4),OBJ_ZPOS(A1)

		MOVE.L	OBJ_ADDR5(A4),D2	;MAIN xpos.
		SUB.L	OBJ_XPOS(A4),D2		;D1=Xdistance.
		DIVS	#12+1,D2
		MOVE.W	D2,OBJ_CNT0(A1)	 	;Set Xstep.
		MOVE.W	#$20-4,OBJ_CNT1(A1)	;Set ANGLEinit.
		MOVE.W	#$20-4,OBJ_CNT2(A1)	;Set ANGLEstep.

		MOVE.W	OBJ_ADDR6(A4),D1	;MAIN spd.
		SUB.W	OBJ_SPD(A4),D1
		MULS	#12+1,D1
		MOVE.W	OBJ_ZPOS(A4),D0
		SUB.W	OBJ_ADDR6+2(A4),D0	;MAIN zpos.
		SUB.W	D1,D0
		EXT.L	D0
		ASL.L	#8,D0
		DIVS	#400,D0
		BPL.S	.zset
		MOVEQ	#100,D0
.zset		MOVE.W	D0,OBJ_CNT3(A1)		;Set Zdistance.

		MOVE.L	A4,OBJ_ADDR0(A1)
		MOVE.L	#JACK_BOD_HIT,OBJ_ADDR7(A1)
		MOVE.L	#OBJ_JACK_OPEN,OBJ_ADDR0(A4)
		MOVE.W	#2,OBJ_CNT4(A4)
		BSET.B	#0,OBJ_FLAG1(A4)
		
		MOVE.W	#SFX_JBSPRING_A,D0
		JSR	CSFX_ONESHOT_V
		BRA	JACK_BOD_MOVE

; --------------------------------------------------------------------------

JACK_PRINT	JSR	O_CAR_PRINT_S
		JSR	SHOW_DAMAGE

		LEA	OBJ_JACK_OUT,A0
		TST.W	OBJ_CNT4(A1)
		BEQ.S	.jack_rotate
		BPL.S	.show
		LEA	OBJ_JACK_IN,A0
.show		MOVE.W	OBJ_ZPOS(A1),D0
		SUBQ.W	#1,D0
		JSR	O_PR_ALLOC_XIT
		MOVE.L	OBJ_ADDR2(A1),A2
		JSR	O_CALC_PATCHZ
		JSR	O_CALC_VIEW
		MOVE.L	A0,OBJ_ADDR2(A1)
		JSR	O_ALLOC_DEALL_S
		JSR	O_PR_SET0

.jack_rotate	TST.W	OBJ_CNT3(A1)
		BEQ	.cont

		MOVE.W	OBJ_ZPOS(A1),D0
		SUBQ.W	#1,D0
		JSR	O_PR_ALLOC_XIT
		LEA	OBJ_JACK_BOD,A0
		MOVE.L	OBJ_ADDR3(A1),A2
		JSR	O_ALLOC_DEALL_S
		MOVE.L	A0,OBJ_ADDR3(A1)
		JSR	O_CALC_PATCHZ

		MOVE.W	OBJ_CNT0(A1),D2
		LSR.W	#7,D2
		LSL.W	D2

		LEA	SIN_LOOKUP,A2
		LEA	$100(A2),A3

		MOVE.W	OBJ_CNT2(A1),D6
		BPL.S	.skp
		NEG.W	D6
.skp		MOVE.W	D6,D7
		NEG.W	D7
		MULS	(A2,D2.W),D6
		MULS	(A3,D2.W),D7
		SWAP	D6
		SWAP	D7
		ROL.L	#5,D6
		ROL.L	#5,D7
		EXT.L	D6
		EXT.L	D7
		ADD.L	#-$100*(128),D7
		ADD.L	OBJ_XPOS(A1),D6

		MOVE.W	OBJ_CNT0(A1),D2
		LSR.W	#5,D2
		NEG.W	D2
		AND.W	#$3FE,D2
		MOVE	#-18063,D1
		MOVE	#-18063,D3
		MULS	(A2,D2.W),D1
		MULS	(A3,D2.W),D3
		SWAP	D1
		SWAP	D3
		EXT.L	D1
		EXT.L	D3
		ADD.L	D1,D6
		ADD.L	D3,D7

		NEG.W	D2
		AND.W	#$3FE,D2

		JSR	O_PR_ROTATE_XY

.pr_ring	MOVEQ	#0,D5
		MOVE.W	OBJ_CNT2(A1),D5
		BPL.S	.pos
		NEG.W	D5
.pos		MOVE.W	D5,D6
		DIVS	#5,D5
		SUB.W	D5,D6

		MOVE.W	#80,D3
		
		MOVEQ	#5-1,D7
		LEA	OBJ_JACK_RING,A0

.pr_ring_lp	MOVEM.L	D3/D5/D6/D7/A0,-(SP)

		MOVE.W	OBJ_ZPOS(A1),D0
		SUBQ.W	#1,D0
		MOVE.W	D0,D1
		JSR	OBJ_PR_ALLOCATE
		BRA.L	.pr_next
		BRA.L	.pr_next
		BRA.L	.pr_next
		JSR	O_CALC_PATCHZ
		MOVE.L	OBJ_ADDR4(A1),A2
		JSR	O_ALLOC_DEALL_S
		MOVE.L	A0,OBJ_ADDR4(A1)

		LEA	SIN_LOOKUP,A2
		LEA	$100(A2),A3

		MOVE.W	OBJ_CNT0(A1),D2
		EXT.L	D2
		DIVS	D3,D2
		AND.W	#$3FE,D2

		MOVE.W	D6,D7
		NEG.W	D7
		MULS	(A2,D2.W),D6
		MULS	(A3,D2.W),D7
		SWAP	D6
		SWAP	D7
		ROL.L	#5,D6
		ROL.L	#5,D7
		EXT.L	D6
		EXT.L	D7
		ADD.L	OBJ_XPOS(A1),D6
		ADD.L	#-$100*128,D7

		MOVE.W	OBJ_CNT0(A1),D2
		EXT.L	D2
		MOVE.W	D3,D1
		ASR.W	#2,D3
		ADD.W	D1,D3
		ASR.W	#1,D3
		DIVS	D3,D2
		AND.W	#$3FE,D2

		JSR	O_PR_ROTATE_XY
		
.pr_next	MOVEM.L	(SP)+,D3/D5/D6/D7/A0
		SUB.W	D5,D6
		MOVE.W	D3,D0
		ASR.W	D0
		ADD.W	D0,D3
		LEA	$20(A0),A0
		DBRA	D7,.pr_ring_lp

.cont		MOVE.L	OBJ_ADDR7(A1),D7
		BEQ.S	.end
		MOVE.L	D7,A1
		BRA	JACK_BOD_PRN

.end		RTS

; --------------------------------------------------------------------------

JACK_BOD_MOVE	MOVE.L	OBJ_ADDR0(A1),A4

		MOVE.W	OBJ_CNT0(A1),D1		;Xstep	
		MOVE.W	OBJ_CNT1(A1),D2		;Ystep
		MOVE.W	OBJ_CNT2(A1),D3
		BPL.S	.forward

.backward	SUBQ.W	#1,OBJ_CNT7(A1)
		MOVE.L	OBJ_XPOS(A4),D1
		SUB.L	OBJ_XPOS(A1),D1
		DIVS	OBJ_CNT7(A1),D1
		ADD.W	D3,D2
		CMP.W	#$40,D2
		BPL.S	.set
		
		MOVE.W	#0,OBJ_CNT0(A4)
		MOVE.W	#2500,D0
		TST.W	D1
		BPL.S	.aset
		MOVE.W	#-1,OBJ_CNT0(A4)
		NEG.W	D0
.aset		MOVE.W	D0,OBJ_CNT1(A4)
		MOVE.W	#10*$10,OBJ_CNT2(A4)
		
		MOVEQ	#0,D0
		MOVEQ	#-2,D1
		CMP.W	#$A000,OBJ_DTOTAL(A4)
		BCC.S	.sval
		
		MOVE.W	#SFX_JBSPRING_C,D0
		JSR	CSFX_ONESHOT_V
		
		MOVE.W	#44,D0
		MOVEQ	#0,D1
.sval		MOVE.W	D0,OBJ_CNT3(A4)
		MOVE.W	D1,OBJ_CNT4(A4)

		CLR.L	OBJ_ADDR7(A4)
		MOVE.L	OBJ_ADDR2(A1),A2
		JSR	O_DEALL_S
		JMP	O_CLEAR_S

.forward	ADDQ.W	#1,OBJ_CNT7(A1)
		ADD.W	D3,D2
		CMP.W	#$180,D2
		BMI.S	.set
.change		NEG.W	OBJ_CNT0(A1)
		NEG.W	OBJ_CNT2(A1)

		MOVE.W	#SFX_JBSPRING_B,D0
		JSR	CSFX_ONESHOT_V

.set		MOVE.W	D2,OBJ_CNT1(A1)
		
		LEA	SIN_LOOKUP,A2
		MOVE.W	#$100,D3
		SUB.W	D2,D3
		AND.W	#$3FE,D3
		
		MOVE.W	OBJ_CNT3(A1),D0
		MULS	(A2,D3.W),D0
		SWAP	D0
		ROL.L	D0
		ADD.W	OBJ_ZPOS(A4),D0
		SUB.W	OBJ_CNT3(A1),D0
		SUB.W	OBJ_ZPOS(A1),D0		;Zmove

		LEA	$100(A2),A2
		MOVE.W	#$80,D3
		SUB.W	D2,D3
		AND.W	#$3FE,D3
		MOVE.W	#-340,D4
		MULS	(A2,D3.W),D4
		ASR.L	#8,D4
		MOVE.L	D4,OBJ_YPOS(A1)

		BTST.B	#0,OBJ_FLAG1(A1)
		BEQ.S	.det_move
		ADD.W	D0,OBJ_ZPOS(A1)
		EXT.L	D1
		ADD.L	D1,OBJ_XPOS(A1)
		RTS

.det_move	JSR	OBJDET_ZXY
		ADD.W	D0,OBJ_ZPOS(A1)
		EXT.L	D1
		ADD.L	D1,OBJ_XPOS(A1)

		MOVE.W	DET_HIT_FLAG,D0
		BEQ.S	.end
		MOVE.L	DET_HIT_DATA1,A2
		CMP.W	#ID_MAIN,OBJ_ID(A2)
		BEQ.S	JACK_BOD_HIT
.end		RTS
		
JACK_BOD_HIT	TST.W	OBJ_CNT0(A1)
		BMI.S	.skp
		NEG.W	OBJ_CNT0(A1)
		NEG.W	OBJ_CNT2(A1)
.skp		BSET.B	#0,OBJ_FLAG1(A1)
		JSR	DETECT_DEALL
		ADD.W	#$400,OBJ_BASH_AMT(A2)
		SUB.W	#$60,OBJ_SPD(A2)
		ADD.L	#-25*$100,OBJ_ADDR7(A2)
		JSR	SET_HIT_PT
		LEA	VIS_JACK_BASH,A0
		JMP	VIS_SET_S

VIS_JACK_BASH	DC.W	0,0,0
		DC.W	0,0,0
		DC.W	$0100,$0200
		DC.L	VIS_MOVE0
		DC.L	VIS_PRN0
		DC.L	VIS_BASHFX_GRS
		DC.W	SFX_JACKHEAD_A		;SFX

; --------------------------------------------------------------------------

JACK_PRADJ	ADD.W	ZMOVE,D0
		MOVE.W	D0,OBJ_ZPOS(A1)
		RTS

JACK_BOD_PRN	MOVE.W	OBJ_ZPOS(A1),D0
		SUB.W	ZMOVE,D0
		MOVE.W	D0,OBJ_ZPOS(A1)
		MOVE.W	D0,D1
		JSR	OBJ_PR_ALLOCATE
		BRA.L	.pr_ring
		BRA.L	.pr_ring
		BRA.L	.end

		LEA	OBJ_JACK_HEAD1,A0	;Print Jack.
		CMP.W	#$80,OBJ_CNT1(A1)
		BMI.S	.prn
		LEA	OBJ_JACK_HEAD2,A0
		CMP.W	#$C0,OBJ_CNT1(A1)
		BMI.S	.prn
		LEA	OBJ_JACK_HEAD0,A0
.prn		MOVE.L	OBJ_ADDR1(A1),A2
		JSR	O_ALLOC_DEALL_S
		MOVE.L	A0,OBJ_ADDR1(A1)
		JSR	O_CALC_PATCHZ
		JSR	O_PR_SET0

.pr_ring	MOVE.L	OBJ_ADDR0(A1),A4	;A4=Main vehicle.

		MOVE.W	OBJ_CNT1(A1),D2
		EXT.L	D2
		ASL.L	#4,D2
		DIVS	#9,D2			;D2=Angle step.
		MOVE.W	D2,D3			;D3=Initial angle.

		MOVE.L	OBJ_XPOS(A1),D4
		MOVE.L	OBJ_XPOS(A4),D6
		SUB.L	D6,D4
		DIVS	#9,D4	       		;D4=Xpos step.	
		EXT.L	D4
		ADD.L	D4,D6	       		;D6=Initial Xpos.	

		LEA	OBJ_JACK_HRING,A0	;A0=Ring graphics.
		MOVE.W	#8-1,D7			

.pr_ring_lp	MOVEM.L	A0/D2/D4/D7,-(SP)

		LEA	SIN_LOOKUP,A2
		MOVE.W	#$100*16,D2
		SUB.W	D3,D2
		LSR.W	#4,D2
		AND.W	#$3FE,D2

		MOVE.W	OBJ_CNT3(A1),D0
		MULS	(A2,D2.W),D0
		SWAP	D0
		ROL.L	D0
		ADD.W	OBJ_ZPOS(A4),D0
		SUB.W	OBJ_CNT3(A1),D0			;D0=Zpos

		MOVE.W	D0,D1
		JSR	OBJ_PR_ALLOCATE
		BRA.L	.pr_next
		BRA.L	.pr_next
		BRA.L	.pr_next

		JSR	O_CALC_PATCHZ
		MOVE.L	OBJ_ADDR2(A1),A2
		JSR	O_ALLOC_DEALL_S
		MOVE.L	A0,OBJ_ADDR2(A1)

		LEA	SIN_LOOKUP+$100,A2
		MOVE.W	#$80*16,D2
		SUB.W	D3,D2
		LSR.W	#4,D2
		AND.W	#$3FE,D2

		MOVE.W	#-340,D7
		MULS	(A2,D2.W),D7
		ASR.L	#8,D7			;D7=Xpos

		JSR	O_PR_SET0_XY
		
.pr_next	MOVEM.L	(SP)+,A0/D2/D4/D7
		LEA	$20(A0),A0
		ADD.W	D2,D3
		ADD.L	D4,D6
		DBRA	D7,.pr_ring_lp

.end		RTS

; --------------------------------------------------------------------------

		XYRATIO	100,147,100,147
		OBJCNTR	222,25,57,111

OBJ_JACK_CLOSE
		DC.L	OBJ_JACK_SET
		DC.L	OBJ_JACK0_ANM0
		DC.L	OBJ_JACK0_ANM1
		DC.L	OBJ_JACK_SKID
		DC.L	OBJ_JACK_DAM

OBJ_JACK0_ANM0	DC.L	OBJ_JACK_XVIEW,OBJ_JACK_YVIEW

		OBJSCLM	217,24,0,128,97,119,JACKAF
		OBJSCLM	218,25,0,128,81,117,JACKAE
		OBJSCL	222,25,0,128,57,116,JACKAD
		OBJSCL	218,25,0,128,81,117,JACKAE
		OBJSCL	217,24,0,128,97,119,JACKAF

OBJ_JACK0_ANM1	DC.L	OBJ_JACK_XVIEW,OBJ_JACK_YVIEW

		OBJSCLM	217,24,128,128,97,119,JACKAF
		OBJSCLM	218,25,128,128,81,117,JACKAE
		OBJSCL	222,25,128,128,57,116,JACKAD
		OBJSCL	218,25,128,128,81,117,JACKAE
		OBJSCL	217,24,128,128,97,119,JACKAF

OBJ_JACK_OPEN
		DC.L	OBJ_JACK_SET
		DC.L	OBJ_JACK1_ANM0
		DC.L	OBJ_JACK1_ANM1
		DC.L	OBJ_JACK_SKID
		DC.L	OBJ_JACK_DAM

OBJ_JACK1_ANM0	DC.L	OBJ_JACK_XVIEW,OBJ_JACK_YVIEW

		OBJSCLM	217,24,0,0,97,119,JACKAF
		OBJSCLM	218,25,0,0,81,117,JACKAE
		OBJSCL	222,25,0,0,57,116,JACKAD
		OBJSCL	218,25,0,0,81,117,JACKAE
		OBJSCL	217,24,0,0,97,119,JACKAF

OBJ_JACK1_ANM1	DC.L	OBJ_JACK_XVIEW,OBJ_JACK_YVIEW

		OBJSCLM	217,24,128,0,97,119,JACKAF
		OBJSCLM	218,25,128,0,81,117,JACKAE
		OBJSCL	222,25,128,0,57,116,JACKAD
		OBJSCL	218,25,128,0,81,117,JACKAE
		OBJSCL	217,24,128,0,97,119,JACKAF

OBJ_JACK_XVIEW	DC.W	2*$20,$20
		DC.L	$4800,$8800,-1
OBJ_JACK_YVIEW	DC.W	0,-1

OBJ_JACK_SKID	DC.W	2
		XSIZE	24
		XSIZE	-24

OBJ_JACK_IN	DC.L	OBJ_JACK_XVIEW,OBJ_JACK_YVIEW
		
		OBJSCLM	220,-22,0,0,67,80,JACKIN
		OBJSCLM	219,-22,0,0,67,80,JACKIN
		OBJSCL	217,-22,0,0,67,80,JACKIN
		OBJSCL	219,-22,0,0,67,80,JACKIN
		OBJSCL	220,-22,0,0,67,80,JACKIN

OBJ_JACK_OUT	DC.L	OBJ_JACK_XVIEW,OBJ_JACK_YVIEW
		
		OBJSCLM	218,-21,0,0,81,83,JACKOT
		OBJSCLM	216,-21,0,0,81,83,JACKOT
		OBJSCL	210,-21,0,0,81,83,JACKOT
		OBJSCL	216,-21,0,0,81,83,JACKOT
		OBJSCL	218,-21,0,0,81,83,JACKOT

OBJ_JACK_SET	DC.W	ID_CAR		;OBJ_ID
		DC.L	JACK_MOVE	;OBJ_MOVE_CTRL
		DC.L	JACK_PRINT	;OBJ_PRN_CTRL
		DC.W	$A0		;OBJ_ZSIZE
		XYSIZE	57,111
		DC.W	$6060		;OBJ_MASS
		DC.L	HROUTINE_CAR	;OBJ_HIT_GOTO
		DC.W	$80*40		;OBJ_ZPOS
		DC.L	$100*200	;OBJ_XPOS
		DC.L	$100*0		;OBJ_YPOS
		DC.W	$70		;OBJ_SPD_MAXA
		DC.W	$A0		;OBJ_SPD_MAXB
		DC.W	10		;OBJ_SPD_INCFA
		DC.W	10		;OBJ_SPD_INCFB
		DC.W	20		;OBJ_SPD_DECF
		DC.W	5		;OBJ_SPD_BRAKE
		DC.W	$0608		;OBJ_TRACTION

OBJ_JACK_DAM	DC.W	($FFFF/$240)/20,$FFFF/160	;was 80

		DC.W	1*$FFFF/7
		DC.L	OBJ_JACK_DPL,DAM_SET0
		DC.W	2*$FFFF/7
		DC.L	OBJ_JACK_DPL,DAM_SET0
		DC.W	3*$FFFF/7
		DC.L	OBJ_JACK_DPL,DAM_SET0
		DC.W	4*$FFFF/7
		DC.L	OBJ_JACK_DPL,DAM_SET0
		DC.W	5*$FFFF/7
		DC.L	OBJ_JACK_DPL,DAM_SET0
		DC.W	6*$FFFF/7
		DC.L	OBJ_JACK_DPL,DAM_SET0
		
		DC.W	$FFFE
		DC.L	0,JACK_KILL
		DC.W	$FFFF
		DC.L	LOGIC_DEATH1,LOGIC_SET0
		DC.L	OBJ_JACK_KILL,KILL_SET0

OBJ_JACK_KILL	DC.W	$010A,5-1
		DC.L	VIS_EXPLD_C1
		DC.L	VIS_EXPLD_C2
		DC.L	VIS_EXPLD_C3
		DC.L	VIS_EXPLD_C4
		DC.L	VIS_EXPLD_C5
		DC.W	20,20-1,1,6
		DC.L	VIS_DOOR
		DC.L	VIS_PIPE
		DC.L	VIS_BUMP
		DC.L	VIS_WHEL
		DC.L	VIS_PIECE1
		DC.L	VIS_PIECE2

OBJ_JACK_DPL	DC.W	8
		DC.L	OBJ_JACK_DP1
		DC.L	OBJ_JACK_DP2
		DC.L	OBJ_JACK_DP3
		DC.L	OBJ_JACK_DP4
		DC.L	OBJ_JACK_DP5
		DC.L	OBJ_JACK_DP6
		DC.L	OBJ_JACK_DP7
		DC.L	OBJ_JACK_DP8
		
OBJ_JACK_DP1	DC.L	VIS_FLAME0,VIS_EXPCTRL_B
		DC.L	OBJ_JBDAM_XVIEW,OBJ_JBDAM_YVIEW
		DAMPTS	$11,230,121,$11,226,120,$11,225,120

OBJ_JACK_DP2	DC.L	VIS_FLAME0M,VIS_EXPCTRL_L
		DC.L	OBJ_JBDAM_XVIEW,OBJ_JBDAM_YVIEW
		DAMPTS	$11,262,99,$11,264,99,$11,267,100
		
OBJ_JACK_DP3	DC.L	VIS_FLAME1M,VIS_EXPCTRL_L
		DC.L	OBJ_JBDAM_XVIEW,OBJ_JBDAM_YVIEW
		DAMPTS	$00,277,45,$01,283,45,$01,285,45

OBJ_JACK_DP4	DC.L	VIS_FLAME2M,VIS_EXPCTRL_L
		DC.L	OBJ_JBDAM_XVIEW,OBJ_JBDAM_YVIEW
		DAMPTS	$00,274,74,$01,295,74,$01,307,75

OBJ_JACK_DP5	DC.L	VIS_FLAME1M,VIS_EXPCTRL_B
		DC.L	OBJ_JBDAM_XVIEW,OBJ_JBDAM_YVIEW
		DAMPTS	$00,276,106,$01,283,106,$01,287,107

OBJ_JACK_DP6	DC.L	VIS_FLAME1,VIS_EXPCTRL_L
		DC.L	OBJ_JBDAM_XVIEW,OBJ_JBDAM_YVIEW
		DAMPTSM	$00,277,45,$01,283,45,$01,285,45

OBJ_JACK_DP7	DC.L	VIS_FLAME2,VIS_EXPCTRL_L
		DC.L	OBJ_JBDAM_XVIEW,OBJ_JBDAM_YVIEW
		DAMPTSM	$00,274,74,$01,295,74,$01,307,75

OBJ_JACK_DP8	DC.L	VIS_FLAME1,VIS_EXPCTRL_B
		DC.L	OBJ_JBDAM_XVIEW,OBJ_JBDAM_YVIEW
		DAMPTSM	$00,276,106,$01,283,106,$01,287,107

OBJ_JBDAM_XVIEW	DC.W	2*10,10
		DC.L	$4800,$8800,-1
OBJ_JBDAM_YVIEW	DC.W	0,-1

; --------------------------------------------------------------------------

OBJ_BOD		DC.L	OBJ_BOD_SET

OBJ_BOD_SET	DC.W	ID_NONADJ	;OBJ_ID
		DC.L	SIGN_NEXT	;OBJ_MOVE_CTRL
		DC.L	JACK_PRADJ	;OBJ_PRN_CTRL
		DC.W	$40		;OBJ_ZSIZE
		XYSIZE	38,50
		DC.W	0		;OBJ_MASS
		DC.L	O_T2M_HIT	;OBJ_HIT_GOTO
		DC.W	0		;OBJ_ZPOS
		DC.L	$100*200	;OBJ_XPOS
		DC.L	$100*0		;OBJ_YPOS

; --------------------------------------------------------------------------

		OBJCNTR	0,0,0,0
OBJ_JACK_BOD	OBJSCL	0,0,78,88,77,77,BOXBOD
		
OBJ_JACK_RING	OBJSCL	0,0,26,42,21,21,BOXRNG
		OBJSCL	0,0,26,42,21,21,BOXRNG
		OBJSCL	0,0,26,42,21,21,BOXRNG
		OBJSCL	0,0,26,74,21,21,BOXRNG
		OBJSCL	0,0,26,74,21,21,BOXRNG
		OBJSCL	0,0,26,74,21,8,BOXRNG
	     
OBJ_JACK_HRING	OBJSCLM	-10,-5,16,70,21,10,BOXRNG
		OBJSCLM	-10,-5,16,70,21,10,BOXRNG
		OBJSCLM	-10,-5,16,38,21,10,BOXRNG
		OBJSCLM	-10,-11,0,0,21,22,BOXRNG
		OBJSCLM	-10,-11,0,0,21,22,BOXRNG
		OBJSCLM	-10,-11,0,0,21,22,BOXRNG
		OBJSCLM	-10,-11,0,0,21,22,BOXRNG
		OBJSCLM	-10,-11,0,0,21,22,BOXRNG

OBJ_JACK_HEAD0	OBJSCLM	-36,-32,32,32,73,51,BOXHED
OBJ_JACK_HEAD1	OBJSCLM	-31,-49,48,48,62,69,BOXBOD
		XYRATIO	50,147,50,147
OBJ_JACK_HEAD2	OBJSCLM	-16,-21,0,0,32,29,BOXMID

; --------------------------------------------------------------------------

LOGIC_JACK

	IFTRUE
    	BATRANGE 1,12
    		IFTRUE
    			GRIDRANGE 1,32,30,64
    			GRIDGOTOX 20
		ELSE_IFTRUE
			GRIDRANGE 1,11,8,29
			GRIDGOTOXY 18,12
		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 18,12
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOX 12
		ELSE_IFTRUE
			GRIDRANGE 12,21,8,29
			GRIDGOTOXY 20,12
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 20,12
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOX 12
		ELSE_IFTRUE
			GRIDRANGE 22,32,8,29
			GRIDGOTOXY 24,12
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 24,1 
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 18,6
		IFEND
    	ELSE_IFTRUEx   	
      	BATRANGE 12,16
    		IFTRUE
    			GRIDRANGE 1,32,30,64
    			GRIDGOTOX 20
		ELSE_IFTRUE
			GRIDRANGE 1,11,8,29
			GRIDGOTOXY 6,12
	  	ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 6,12
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOX 14
		ELSE_IFTRUE	
			GRIDRANGE 12,21,8,29
			GRIDGOTOXY 24,12 
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 24,12
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOX 12
		ELSE_IFTRUE
			GRIDRANGE 22,32,8,29
			GRIDGOTOXY 24,12
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 24,1
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOX 12
		IFEND  
  	ELSE_IFTRUE
	BATRANGE 17,20
    		IFTRUE
    			GRIDRANGE 1,32,30,64
    			GRIDGOTOX 12
		ELSE_IFTRUE
			GRIDRANGE 1,11,8,29
			GRIDGOTOXY 8,12
		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 8,1
	        ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOX 18
		ELSE_IFTRUE	
			GRIDRANGE 12,21,8,29
			GRIDGOTOXY 8,12 
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 8,12
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOX 18
		ELSE_IFTRUE
			GRIDRANGE 22,32,8,29
			GRIDGOTOXY 27,12
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 27,12
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOX 18
		IFEND
    	ELSE_IFTRUE
	BATRANGE 21,32
    		IFTRUE
    			GRIDRANGE 1,32,30,64
    			GRIDGOTOX 12
		ELSE_IFTRUE
			GRIDRANGE 1,11,8,29
			GRIDGOTOXY 8,12
 		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 8,12
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOX 16	
	       	ELSE_IFTRUE
			GRIDRANGE 12,21,8,29
			GRIDGOTOXY 8,12       
		ELSE_IFTRUE	      
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 8,12
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOX 24
		ELSE_IFTRUE
			GRIDRANGE 22,32,8,29
			GRIDGOTOXY 16,12
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 16,12
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOX 24
		     
		IFEND
	IFEND
	LOGICEND
		       			
; --------------------------------------------------------------------------

	EVEN
		 
; --------------------------------------------------------------------------
