; ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
; บ SUB-CPU Initial program.						   บ
; ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ

		ORG	$8000
SP_START

; --------------------------------------------------------------------------

		MOVE.W	#$2700,SR

		CLR.L	SCOM_SDATA
		CLR.L	SCOM_SDATA+4
		CLR.L	SCOM_SDATA+8
		CLR.L	SCOM_SDATA+12

		MOVE.L	_LEVEL2+2,LV2_BIOS_JMP+2
		MOVE.L	_LEVEL4+2,LV4_BIOS_JMP+2
		MOVE.L	_LEVEL5+2,LV5_BIOS_JMP+2
		MOVE.L	_LEVEL6+2,LV6_BIOS_JMP+2
		MOVE.L	#LV2_REDIRECT,_LEVEL2+2
      		MOVE.L	#LV4_REDIRECT,_LEVEL4+2
      		MOVE.L	#LV5_REDIRECT,_LEVEL5+2
      		MOVE.L	#LV6_REDIRECT,_LEVEL6+2
 		MOVE.L	#USER_VBL,_USERCALL2+2

		BSET	#1,SINTMASK
		BSET	#2,SINTMASK
		BCLR	#3,SINTMASK
;		BCLR	#4,SINTMASK

		AND.B	#%00011,SMEM_MODE

		IF	SOUND_INC
		MOVE.W	#1,PCM_inhibit
		CLR.W	PCM_drvflag
		BTST	#0,SMEM_MODE
		BNE.S	.clr_skp
		CLR.W	SWORD_RAM+WRAM_SND_XBUFF
.clr_skp	ENDIF

		MOVE.W	#$2000,SR

		ADDQ.B	#1,SCOM_SFLAG		;Sync to main.

		BSR	ACCESS_REQ		;Clear WORD ram.
		LEA	SWORD_RAM,A0
		MOVEQ	#0,D0
		MOVE.W	#$4000-1,D1
.clrit		MOVE.L	D0,(A0)+
		MOVE.L	D0,(A0)+
		MOVE.L	D0,(A0)+
		MOVE.L	D0,(A0)+
		DBRA	D1,.clrit
		BSR	ACCESS_OFF

		BRA	MAIN 

; --------------------------------------------------------------------------

LV4_REDIRECT	MOVE.L	#LVX_LV2_REDIR,_LEVEL2+2
		PEA	LVX_BIOS_RTE(PC)
		MOVE.W	SR,-(SP)
 		MOVE.W	#$2100,SR
LV4_BIOS_JMP	JMP	0.L		;SEGA LEVEL 4

; --------------------------------------------------------------------------

LV5_REDIRECT	MOVE.L	#LVX_LV2_REDIR,_LEVEL2+2
		PEA	LVX_BIOS_RTE(PC)
		MOVE.W	SR,-(SP)
 		MOVE.W	#$2100,SR
LV5_BIOS_JMP	JMP	0.L		;SEGA LEVEL 5

; --------------------------------------------------------------------------

LV6_REDIRECT	MOVE.L	#LVX_LV2_REDIR,_LEVEL2+2
		PEA	LVX_BIOS_RTE(PC)
		MOVE.W	SR,-(SP)
 		MOVE.W	#$2100,SR
LV6_BIOS_JMP	JMP	0.L		;SEGA LEVEL 6

; --------------------------------------------------------------------------

LV2_REDIRECT	BSET	#0,SMEM_MODE
LV2_PROCESS	PEA	LV2_BIOS_RTE(PC)
		MOVE.W	SR,-(SP)
LV2_BIOS_JMP	JMP	0.L		;SEGA LEVEL 2

LV2_BIOS_RTE	TST.W	SCOM_SDATA+SCOM_FRAME
		BMI.S	SP_EXIT
		TST.W	ACC_COUNT
		BEQ.S	.end
.access_wait	BTST	#0,SMEM_MODE
		BNE.S	.access_wait
.end		RTE

LVX_LV2_REDIR	BSET	#0,SMEM_MODE
		ADDQ.W	#1,VBL_FLAG
LVX_DONE	RTE

LVX_BIOS_RTE	MOVE.L	#LV2_REDIRECT,_LEVEL2+2
		TST.W	VBL_FLAG
		BEQ.S	LVX_DONE
		SUBQ.W	#1,VBL_FLAG
		BRA.S	LV2_PROCESS

ACC_COUNT	DC.W	0
VBL_FLAG	DC.W	0
SVBL_CNT	DC.L	0

; - Standard VBL routines. -------------------------------------------------

USER_VBL	ADDQ.L	#1,SVBL_CNT
		TST.W	SCOM_SDATA+SCOM_FRAME
		BMI.S	.end

		IF	SOUND_INC
		JSR	AUDIO_VBL_SUB
		ENDIF

		IF	SNASMCD_DEV
		TRAP	#0
		ENDIF

		IF	SOUND_INC
		LEA	SUBS_XBUFF,A0
		MOVE.W	(A0),D0
		BEQ.S	.trans_done
		LEA	SWORD_RAM+WRAM_SND_XBUFF,A1
		ADDQ.W	#1,D0
.access_wait	BTST.B	#0,SMEM_MODE
		BNE.S	.access_wait
.tloop		MOVE.B	(A0)+,(A1)+
		DBRA	D0,.tloop
.trans_done
		ENDIF

.end		RTS

SP_EXIT		MOVE.W	#$2700,SR
.wait		TST.W	SCOM_MDATA+MCOM_FRAME
		BPL.S	.wait
		BSET	#2,SMEM_MODE	;set 1M mode
		SUBQ.W	#1,SCOM_SDATA+SCOM_FRAME
		
		JMP	SHELL_ROUT

; --------------------------------------------------------------------------

ACCESS_REQ	ADDQ.W	#1,ACC_COUNT
.access_wait	BTST	#0,SMEM_MODE
		BNE.S	.access_wait
		RTS
ACCESS_OFF	SUBQ.W	#1,ACC_COUNT
		RTS

; --------------------------------------------------------------------------

SWAP_SET	MOVE.W	#$2100,SR
		TST.W	SCL_BUSY
  		BEQ.S	.swap
   		ADDQ.W	#1,SCL_SWAPIT
		MOVE.W	#$2000,SR
		RTS
.swap		MOVE.W	#$2000,SR

SWAP_SCREEN	BSR.S	ACCESS_REQ
		LEA	SRAM_DATA,A0		;Transfer control data.
		LEA	WRAM_DATA_S,A1
		MOVE.W	#(WRAM_DLEN/2)-1,D0
.dtran_lp	MOVE.W	(A0)+,(A1)+
		DBRA	D0,.dtran_lp
		SUBQ.W	#1,ACC_COUNT

		MOVE.W	FRAME_TRANS_NO,(SCOM_SDATA+SCOM_FRAME).W
.skp		RTS

SWAP_WAIT	TST.W	SCL_SWAPIT
		BNE.S	SWAP_WAIT

		MOVE.W	(SCOM_SDATA+SCOM_FRAME).W,D0
.wait		CMP.W	(SCOM_MDATA+MCOM_FRAME).W,D0
		BNE.S	.wait
		RTS

; --------------------------------------------------------------------------

IMG_BUFF_ROTATE	LEA	IMG_LIST,A0
		MOVE.W	SCOM_MDATA+MCOM_FRAME,D0
		MOVE.W	D0,D1
		ASL.W	D0
		ADD.W	D1,D0
		ASL.W	#2,D0
		LEA	(A0,D0.W),A0
		LEA	IMG_BADDR_PREV,A1
		MOVE.W	(A0)+,FRAME_TRANS_NO
		MOVE.W	(A0)+,(A1)+
		MOVE.W	(A0)+,(A1)+
		MOVE.W	(A0)+,(A1)+
		MOVE.L	(A0)+,RSC_BUFFER_NEXT
		RTS

IMG_LIST	DC.W	1,SSCR2_ADDR,SSCR0_ADDR,SSCR1_ADDR
		DC.L	RSC_BUFFER_0

		DC.W	2,SSCR0_ADDR,SSCR1_ADDR,SSCR2_ADDR
		DC.L	RSC_BUFFER_1
		DC.W	3,SSCR1_ADDR,SSCR2_ADDR,SSCR0_ADDR
		DC.L	RSC_BUFFER_0
		DC.W	4,SSCR2_ADDR,SSCR0_ADDR,SSCR1_ADDR
		DC.L	RSC_BUFFER_1
		DC.W	5,SSCR0_ADDR,SSCR1_ADDR,SSCR2_ADDR
		DC.L	RSC_BUFFER_0
		DC.W	6,SSCR1_ADDR,SSCR2_ADDR,SSCR0_ADDR
		DC.L	RSC_BUFFER_1
		DC.W	1,SSCR2_ADDR,SSCR0_ADDR,SSCR1_ADDR
		DC.L	RSC_BUFFER_0

; --------------------------------------------------------------------------

DATA_RESET
		LEA	DATA_AREA,A0
		MOVE.L	#DATA_END-DATA_AREA-1,D0
.data_clr	CLR.B	(A0)+
		DBRA	D0,.data_clr
		SUB.L	#$10000,D0
		BPL.S	.data_clr

		MOVE.L	#$FF450000,BG_XPOS
		MOVE.L	#$100*(-RSWIDTH/2),XVIEW
		MOVE.L	#RTILT*256,YVIEW
		MOVE.L	#PDATA,RUPD_PGRDATA
		MOVE.L	#SGR_LIST,RUPD_SGRDATA

		MOVE.L	#RD_EDGE_L,DET_EDGE_L
		MOVE.L	#RD_EDGE_R,DET_EDGE_R
		MOVE.L	#RD_LIMIT_L,DET_LIMIT_L
		MOVE.L	#RD_LIMIT_R,DET_LIMIT_R

		LEA	SEEDS,A0
		MOVE.W	#3456,(A0)+
		MOVE.W	#123,(A0)+
		MOVE.W	#45678,(A0)+

	  	RTS

; --------------------------------------------------------------------------

		INCLUDE	AM3D.68K
		INCLUDE	SCALE.68K
		INCLUDE	GR_READY.68K
		INCLUDE	STEST.68K
		INCLUDE	VISUALS.68K
		INCLUDE	OBJECT.68K
		INCLUDE	LOGIC.68K
		INCLUDE	ROAD.68K
		INCLUDE	DAMAGE.68K

; - Level one. -------------------------------------------------------------

		IF	LEVEL=1

		INCLUDE	CAR_CTRL.68K
		INCLUDE	TRASHCAN.68K
		INCLUDE	LEVEL_1\CYCLE.68K
		INCLUDE	LEVEL_1\VILLAN.68K
		INCLUDE	LEVEL_1\BASHER.68K
		INCLUDE	LEVEL_1\JACKNBOX.68K
		INCLUDE	LEVEL_1\FIRETRUC.68K
		INCLUDE	LEVEL_1\SIDEOBJS.EQU
		INCLUDE	LEVEL_1\MAPS.EQU
GLIST		INCBIN	LEVEL_1\GLIST.BIN
GLIST2		INCBIN	LEVEL_1\GLIST.BIN
GLIST3		INCBIN	LEVEL_1\GLIST.BIN
SMAPS		INCBIN	LEVEL_1\SMAPS.BIN
CMAPS		INCBIN	LEVEL_1\CMAPS.BIN
CHARS		INCBIN	LEVEL_1\CHARS.BIN

; - Level two. -------------------------------------------------------------

		ELSEIF	LEVEL=2

		INCLUDE	CAR_CTRL.68K
		INCLUDE	TRASHCAN.68K
		INCLUDE	LEVEL_2\BACKANIM.68K
		INCLUDE	LEVEL_2\TRCONE.68K
		INCLUDE	LEVEL_2\BOLARD.68K
		INCLUDE	LEVEL_2\CYCLE.68K
		INCLUDE	LEVEL_2\VILLAN.68K
		INCLUDE	LEVEL_2\BASHER.68K
		INCLUDE	LEVEL_2\TANK.68K
		INCLUDE	LEVEL_2\MINICAN.68K
		INCLUDE	LEVEL_2\CANNON.68K
		INCLUDE	LEVEL_2\SIDEOBJS.EQU
		INCLUDE	LEVEL_2\MAPS.EQU
GLIST		INCBIN	LEVEL_2\GLIST.BIN
GLIST2		INCBIN	LEVEL_2\GLIST.BIN
GLIST3		INCBIN	LEVEL_2\GLIST.BIN
SMAPS		INCBIN	LEVEL_2\SMAPS.BIN
CMAPS		INCBIN	LEVEL_2\CMAPS.BIN
CHARS		INCBIN	LEVEL_2\CHARS.BIN

; - Level three. -----------------------------------------------------------

		ELSEIF	LEVEL=3

		INCLUDE	CAR_CTRL.68K
		INCLUDE	TRASHCAN.68K
		INCLUDE	LEVEL_3\BACKANIM.68K
		INCLUDE	LEVEL_3\BOLARD.68K
		INCLUDE	LEVEL_3\CYCLE.68K
		INCLUDE	LEVEL_3\VILLAN.68K
		INCLUDE	LEVEL_3\BASHER.68K
		INCLUDE	LEVEL_3\TRUCK.68K
		INCLUDE	LEVEL_3\ICETRUCK.68K
		INCLUDE	LEVEL_3\SIDEOBJS.EQU
		INCLUDE	LEVEL_3\MAPS.EQU
GLIST		INCBIN	LEVEL_3\GLIST.BIN
GLIST2		INCBIN	LEVEL_3\GLIST.BIN
GLIST3		INCBIN	LEVEL_3\GLIST.BIN
SMAPS		INCBIN	LEVEL_3\SMAPS.BIN
CMAPS		INCBIN	LEVEL_3\CMAPS.BIN
CHARS		INCBIN	LEVEL_3\CHARS.BIN

; - Level four. ------------------------------------------------------------

		ELSEIF	LEVEL=4

		INCLUDE	SKI_CTRL.68K
		INCLUDE	LEVEL_4\RAMP.68K
		INCLUDE	LEVEL_4\RHOLE.68K
		INCLUDE	LEVEL_4\CRUNCH.68K
		INCLUDE	LEVEL_4\SKULL.68K
		INCLUDE	LEVEL_4\SIDEOBJS.EQU
		INCLUDE	LEVEL_4\MAPS.EQU
GLIST		INCBIN	LEVEL_4\GLIST.BIN
GLIST2		INCBIN	LEVEL_4\GLIST.BIN
GLIST3		INCBIN	LEVEL_4\GLIST.BIN
SMAPS		INCBIN	LEVEL_4\SMAPS.BIN
CMAPS		INCBIN	LEVEL_4\CMAPS.BIN
CHARS		INCBIN	LEVEL_4\CHARS.BIN

; - Level five. ------------------------------------------------------------

		ELSEIF	LEVEL=5

		INCLUDE	SKI_CTRL.68K
		INCLUDE	LEVEL_5\RAMP.68K
		INCLUDE	LEVEL_5\ICEBERGS.68K
		INCLUDE	LEVEL_5\BOUYS.68K
		INCLUDE	LEVEL_5\MINES.68K
		INCLUDE	LEVEL_5\JETSKI.68K
		INCLUDE	LEVEL_5\BOAT.68K
		INCLUDE	LEVEL_5\SKULL.68K
		INCLUDE	LEVEL_5\DUCK.68K
		INCLUDE	LEVEL_5\SIDEOBJS.EQU
		INCLUDE	LEVEL_5\MAPS.EQU
GLIST		INCBIN	LEVEL_5\GLIST.BIN
GLIST2		INCBIN	LEVEL_5\GLIST.BIN
GLIST3		INCBIN	LEVEL_5\GLIST.BIN
SMAPS		INCBIN	LEVEL_5\SMAPS.BIN
CMAPS		INCBIN	LEVEL_5\CMAPS.BIN
CHARS		INCBIN	LEVEL_5\CHARS.BIN

		ENDIF

; --------------------------------------------------------------------------

SIN_LOOKUP	INCBIN	SINTAB.BIN

; --------------------------------------------------------------------------

		IF	SOUND_INC
		INCLUDE	SOUNDSUB.INC
		ENDIF

; --------------------------------------------------------------------------

		INCLUDE	BATDATA.EQU

; --------------------------------------------------------------------------

SP_END

