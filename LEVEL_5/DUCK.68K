; ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
; บ BATMAN RETURNS CD-ROM						   บ
; ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ

; MAIN BOSS - LEVEL 5 - "Penguin duck boat"

; --------------------------------------------------------------------------

DUCK_KILL  	MOVE.L	OBJ_ADDR2(A1),A6
		JMP	(A6)

DUCK_DEATH	LEA	OBJ_DUCK_KILL,A0
		JMP	KILL_SET1

DUCK_SMOKE	BSET	#O_DEAD,OBJ_FLAG0(A1)
		MOVE.L	#DUCK_SMOKE_MOVE,OBJ_MOVE_CTRL(A1)
		MOVE.W	#$C0,OBJ_SPD_MAXA(A1)
		MOVE.W	#$C0,OBJ_SPD_MAXB(A1)
		MOVE.W	#$100,OBJ_LMSPD(A1)
		MOVE.L	A1,-(SP)
		JSR	SCADD_MAINBOSS
		MOVE.L	(SP)+,A1
		JMP	KILL_SET4

DUCK_SMOKE_MOVE	
		JSR	LOGIC_CTRL
		JSR	SFX3D_SPEED	
		JSR	DAMAGE_CTRL
		
		TST.B	OBJ_FLAG1(A1)
		BNE.S	.clr_chk
		CMP.W	#$A00,OBJ_ZPOS(A1)
		BMI.S	.clr_chk
		NOT.B	OBJ_FLAG1(A1)
		JSR	ECL_KILL

.clr_chk	CMP.W	#$1400,OBJ_ZPOS(A1)
		BMI.S	.end
		JSR	O_CLEAR_S
		MOVE.L	OBJ_ADDR3(A1),A2
		JSR	O_DEALL_S
		JSR	CLEAR_DAMAGE
		JSR	SFX3D_KILL
.end		RTS

; --------------------------------------------------------------------------

DUCK_CLEAR	JSR	O_CLEAR_S
		MOVE.L	OBJ_ADDR3(A1),A2
		JSR	O_DEALL_S
		JSR	CLEAR_DAMAGE
		JSR	SFX3D_KILL
		JSR	SCADD_MAINBOSS
		JMP	ECL_KILL

; --------------------------------------------------------------------------

DUCK_SETUP1	LEA	OBJ_DUCK1,A6
		JSR	O_OBJECT_SETUP
		BNE.S	.end
		MOVE.L	#DUCK_MOVE1,OBJ_MOVE_CTRL(A1)
		MOVE.L	#DUCK_SMOKE,OBJ_ADDR2(A1)
		MOVE.L	#LOGIC_DUCK1,OBJ_LOGIC_DATA(A1)
		MOVE.W	#$50,OBJ_LMSPD(A1)
		MOVE.W	#SFX_EDUCK_A,OBJ_FX0_SFXNUM(A1)
		
		MOVEQ	#0,D0
.end		RTS

; --------------------------------------------------------------------------

DUCK_MOVE1	JSR	LOGIC_CTRL
		JSR	SFX3D_SPEED	
		JSR	DAMAGE_CTRL
		JSR	EDAMAGE_METER
		BTST	#O_DEAD,OBJ_FLAG0(A1)
		BNE.S	.end

.fchk		TST.W	OBJ_CNT2(A1)
		BEQ.S	.misc
		CMP.B	#1,OBJ_FLASH0(A1)
		BMI.S	.fire
		BNE.S	.misc
		MOVE.L	OBJECT_DATA+OBJ_XPOS,OBJ_ADDR7(A1)
		MOVE.W	#SFX_LAZERFIRE_A,D0
		JMP	CSFX_ONESHOT_V
.fire		SUBQ.W	#1,OBJ_CNT2(A1)
		BRA	DUCK_BEAM	
	
.misc		TST.W	OBJ_CNT1(A1)
		BEQ.S	.fdist
		SUBQ.W	#1,OBJ_CNT1(A1)
		RTS

.fdist		CMP.W	#$B00,OBJ_ZPOS(A1)
		BPL.S	.end
		MOVE.W	#6,OBJ_CNT2(A1)
		MOVE.B	#6,OBJ_FLASH0(A1)
		MOVE.W	#18,OBJ_CNT6(A1)
		MOVE.W	#6,OBJ_CNT1(A1)
		CMP.W	#$C000,OBJ_DTOTAL(A1)
		BCC.S	.end
		MOVE.W	#12,OBJ_CNT1(A1)
		CMP.W	#$8000,OBJ_DTOTAL(A1)
		BCC.S	.end
		MOVE.W	#18,OBJ_CNT1(A1)
.end		RTS

; --------------------------------------------------------------------------

DUCK_SETUP2	LEA	OBJ_DUCK1,A6
		JSR	O_OBJECT_SETUP
		BNE.S	.end
		MOVE.L	#DUCK_MOVE2,OBJ_MOVE_CTRL(A1)
		MOVE.L	#DUCK_SMOKE,OBJ_ADDR2(A1)
		MOVE.L	#LOGIC_DUCK2,OBJ_LOGIC_DATA(A1)
		MOVE.W	#$50,OBJ_LMSPD(A1)
		MOVE.W	#SFX_EDUCK_A,OBJ_FX0_SFXNUM(A1)
		
		MOVEQ	#0,D0
.end		RTS

; --------------------------------------------------------------------------

DUCK_MOVE2	JSR	LOGIC_CTRL
		JSR	SFX3D_SPEED	
		JSR	DAMAGE_CTRL
		JSR	EDAMAGE_METER
		BTST	#O_DEAD,OBJ_FLAG0(A1)
		BNE.S	.end
		
		TST.B	OBJ_FLASH0(A1)
		BEQ.S	.fire_chk
		CMP.B	#1,OBJ_FLASH0(A1)
		BEQ	DUCK_MISSILE

.fire_chk	TST.W	OBJ_CNT1(A1)
		BEQ.S	.fdist
		SUBQ.W	#1,OBJ_CNT1(A1)
		RTS

.fdist		CMP.W	#$300,OBJ_ZPOS(A1)
		BMI.S	.end
		CMP.W	#$C00,OBJ_ZPOS(A1)
		BPL.S	.end
		MOVE.B	#6,OBJ_FLASH0(A1)
		MOVE.W	#18,OBJ_CNT6(A1)
		
		MOVE.W	#15,OBJ_CNT1(A1)
		CMP.W	#$C000,OBJ_DTOTAL(A1)
		BCC.S	.end
		MOVE.W	#25,OBJ_CNT1(A1)
		CMP.W	#$8000,OBJ_DTOTAL(A1)
		BCC.S	.end
		MOVE.W	#35,OBJ_CNT1(A1)
.end		RTS

; --------------------------------------------------------------------------

DUCK_SETUP3	LEA	OBJ_DUCK1,A6
		JSR	O_OBJECT_SETUP
		BNE.S	.end
		MOVE.L	#DUCK_MOVE3,OBJ_MOVE_CTRL(A1)
		MOVE.L	#DUCK_DEATH,OBJ_ADDR2(A1)
		MOVE.L	#LOGIC_DUCK3,OBJ_LOGIC_DATA(A1)
		MOVE.W	#$50,OBJ_LMSPD(A1)
		MOVE.W	#SFX_EDUCK_A,OBJ_FX0_SFXNUM(A1)
		
		MOVE.L	#$800,OBJ_ADDR4(A1)
		MOVE.L	#$2800,OBJ_ADDR5(A1)
		
		MOVEQ	#0,D0
.end		RTS

; --------------------------------------------------------------------------

DUCK_MOVE3	BTST	#O_CLEAR,OBJ_FLAG0(A1)
		BNE	DUCK_CLEAR
		
		JSR	LOGIC_CTRL
		JSR	SFX3D_SPEED	
		JSR	DAMAGE_CTRL
		JSR	EDAMAGE_METER
		
		BTST	#O_DEAD,OBJ_FLAG0(A1)
		BNE.S	.end

.fchk		TST.W	OBJ_CNT2(A1)
		BEQ.S	.misc
		CMP.B	#2,OBJ_FLASH0(A1)
		BPL.S	.end
		SUBQ.W	#1,OBJ_CNT2(A1)
		BRA	DUCK_FLAME	
	
.misc		TST.W	OBJ_CNT1(A1)
		BEQ.S	.fdist
		SUBQ.W	#1,OBJ_CNT1(A1)
.end		RTS

.fdist		CMP.W	#$B00,OBJ_ZPOS(A1)
		BPL.S	.end
		MOVE.W	#20,OBJ_CNT2(A1)
		MOVE.B	#6,OBJ_FLASH0(A1)
		MOVE.W	#26,OBJ_CNT6(A1)
		MOVE.W	#1,OBJ_CNT1(A1)
		CMP.W	#$C000,OBJ_DTOTAL(A1)
		BCC.S	.end
		MOVE.W	#5,OBJ_CNT1(A1)
		CMP.W	#$8000,OBJ_DTOTAL(A1)
		BCC.S	.end
		MOVE.W	#10,OBJ_CNT1(A1)
		
		MOVE.W	#SFX_FTFLAME_A,D0
		JMP	CSFX_ONESHOT_V

; --------------------------------------------------------------------------

DUCK_PRINT	JSR	O_CAR_PRINT_S
		TST.W	OBJ_CNT6(A1)
		BEQ.S	.damage
		SUBQ.W	#1,OBJ_CNT6(A1)
		JSR	O_PR_ALLOC_XIT
		LEA	OBJ_UMBREL,A0
		MOVE.L	OBJ_ADDR3(A1),A2
		JSR	O_ALLOC_DEALL_S
		MOVE.L	A0,OBJ_ADDR3(A1)
		ADD.W	#$40,OBJ_CNT7(A1)
		MOVE.W	OBJ_CNT7(A1),D2
		AND.W	#$3FE,D2
		JSR	O_PR_ROTATE

.damage		JMP	SHOW_DAMAGE

; --------------------------------------------------------------------------

DUCK_MISSILE	NOT.B	OBJ_FLAG3(A1)
		BEQ.S	.type2

.type1		BSR	.setup
		BNE	.end
		MOVE.L	#$600,OBJ_ADDR4(A2)
		BSR	.setup
		BNE	.end
		MOVE.L	#-$600,OBJ_ADDR4(A2)
		BSR	.setup
		MOVE.W	#SFX_ROCKET_A,D0
		JMP	CSFX_ONESHOT_V

.type2		BSR	.setup
		BNE.S	.end
		MOVE.L	#$300,OBJ_ADDR4(A2)
		BSR	.setup
		BNE.S	.end
		MOVE.L	#-$300,OBJ_ADDR4(A2)
		MOVE.W	#SFX_ROCKET_A,D0
		JMP	CSFX_ONESHOT_V

.setup		MOVE.L	A1,A2
		LEA	OBJ_CR,A6
		JSR	O_OBJECT_SETUP
		EXG	A1,A2
		BNE.S	.end
		MOVE.L	#CRHIT_GROUND,OBJ_ADDR6(A2)
		MOVE.L	#CRHIT_OBJECT,OBJ_ADDR7(A2)
		MOVE.W	OBJ_ZPOS(A1),OBJ_ZPOS(A2)
		MOVE.L	OBJ_XPOS(A1),OBJ_XPOS(A2)
		MOVE.L	OBJ_YPOS(A1),D0
		ADD.L	#-50*$100,D0
		MOVE.L	D0,OBJ_YPOS(A2)
		MOVE.L	OBJ_SPD(A1),OBJ_SPD(A2)
		MOVE.W	#-$6,OBJ_ADDR5(A2)
		MOVEQ	#0,D0
.end		RTS

; --------------------------------------------------------------------------

DUCK_BEAM	MOVE.L	OBJECT_DATA+OBJ_SPD,D0
		MOVE.W	OBJECT_DATA+OBJ_ZPOS,D1
		MOVE.L	OBJ_ADDR7(A1),D6
		MOVEQ	#0,D7						
		LEA	DBEAM_SET_DATA,A4
		JSR	O_LINE_TO_POS
.end		RTS

DBEAM_PRINT	MOVE.L	OBJ_ADDR0(A1),A0
		MOVE.L	OBJGR_ANM0(A0),A0
		MOVE.W	OBJ_CNT0(A1),D1
		ADD.W	#$20,D1
		CMP.W	#19*$20,D1
		BMI.S	.skp
		MOVE.W	#19*$20,D1
.skp		MOVE.W	D1,OBJ_CNT0(A1)
		AND.W	#$FFE0,D1
		LEA	(A0,D1.W),A0
		JMP	O_T2M_PRINT

DBEAM_MOVE	BTST	#O_CLEAR,OBJ_FLAG0(A1)
		BNE.S	.clear
		JSR	O_RANGE_CHK 	
.clear		JMP	O_CLEAR_S
		JMP	O_CLEAR_S
		MOVE.L	OBJ_XPOS(A1),D0
		SUB.L	#200*$100,D0
		BPL.S	.pxchk
		NEG.L	D0
.pxchk		CMP.L	#600*$100,D0
		BPL.S	.clear

		MOVE.W	OBJ_SPD(A1),D0
		MOVE.W	OBJ_ADDR4+2(A1),D1
		LEA	SIGN_DET_ZXKILL,A5	;Sign hit adjust routine.
		JSR	OBJDET_ZXY
		ADD.W	D0,OBJ_ZPOS(A1)
		ADD.L	D1,OBJ_XPOS(A1)

		MOVE.W	DET_HIT_FLAG,D0
		BNE.S	.hit
.cont		MOVE.L	OBJ_ADDR5(A1),D0
		ADD.L	D0,OBJ_SPD(A1)
		MOVE.L	OBJ_ADDR2(A1),D0
		ADD.L	D0,OBJ_YPOS(A1)
		BMI.S	.end
		CMP.L	#20*$100,OBJ_YPOS(A1)
		BPL.S	.clear
.end		RTS

.hit		CMP.W	#OBJ_HIT,D0
		BCS.S	DBEAMHIT_OBJECT
		MOVE.L	DET_HIT_DATA1,A2
		CMP.W	#ID_MAIN,OBJ_ID(A2)
		BNE.S	.cont

DBEAMHIT_OBJECT	BSET	#O_CLEAR,OBJ_FLAG0(A1)
		ADDQ.W	#1,OBJ_SHOT_AMT(A2)
		MOVE.W	#SFX_LAZERHIT_A,D0
		JMP	CSFX_ONESHOT_V

DBEAM_SET_DATA	DC.L	OBJ_DBEAM	;Object setup.
		DC.L	SIGN_NEXT	;Ground hit routine.
		DC.L	DBEAMHIT_OBJECT	;Object hit routine.
		DC.L	-60*$100	;YPOS offset.
		DC.L	60*$100		;Yheight.
		DC.W	0,10		;Up&down steps.
		DC.L	$40000		;Zlimit.
		DC.L	300*$100	;Xlimit.

OBJ_DBEAM	DC.L	OBJ_DBEAM_SET
		DC.L	OBJ_DBEAM_ANM0
		DC.L	OBJ_DBEAM_ANM0
		DC.L	0

OBJ_DBEAM_ANM0	
		XYRATIO	100,40,100,40
RINC		=	10

		REPT	20
		OBJCNTR	0,0,31,15
		OBJSCL	0,0,128,0,31,31,SKBEAM
		XYRATIO	100,(XRATIO_TO/$100+RINC),100,(XRATIO_TO/$100+RINC)
		ENDR

OBJ_DBEAM_SET	DC.W	ID_BOTTLE	;OBJ_ID
		DC.L	DBEAM_MOVE	;OBJ_MOVE_CTRL
		DC.L	DBEAM_PRINT	;OBJ_PRN_CTRL
		DC.W	$10		;OBJ_ZSIZE
		XYSIZE	28,28
		DC.W	0		;OBJ_MASS
		DC.L	O_T2M_HIT	;OBJ_HIT_GOTO

; --------------------------------------------------------------------------

DUCK_FLAME
		MOVE.L	OBJ_ADDR4(A1),D4
		MOVE.L	OBJ_ADDR5(A1),D5
		MOVE.L	OBJ_ADDR6(A1),D6
		BMI.S	.calc
		NEG.L	D4
.calc		ADD.L	D4,D5
		ADD.L	D5,D6
		MOVE.L	D5,OBJ_ADDR5(A1)
		MOVE.L	D6,OBJ_ADDR6(A1)

		ADD.L	OBJ_XPOS(A1),D6

		MOVE.L	#$800000,D0
		MOVE.W	OBJ_ZPOS(A1),D1
		SUB.W	#$200,D1
		MOVEQ	#0,D7

		LEA	FLM_SET_DATA,A4
		JSR	O_THROW_TO_POS

.end		RTS

FHIT_GROUND	;TST.L	OBJ_YPOS(A1)
		;BMI.S	.clear
		BSR	GRFLAME_SETUP
.clear		JMP	O_CLEAR_S

FHIT_OBJECT	BSET	#O_DEAD,OBJ_FLAG0(A1)
		ADD.W	#1,OBJ_SHOT_AMT(A2)
		
		MOVE.W	#SFX_FTFLMHIT_A,D0
		JMP	CSFX_ONESHOT_V

FLM_PRINT	MOVE.L	OBJ_ADDR0(A1),A0
		MOVE.L	OBJGR_ANM0(A0),A0
		MOVE.W	OBJ_CNT0(A1),D1
		ADD.W	#$20,D1
		CMP.W	#17*$20,D1
		BMI.S	.skp
		MOVE.W	#17*$20,D1
.skp		MOVE.W	D1,OBJ_CNT0(A1)
		AND.W	#$FFE0,D1
		LEA	(A0,D1.W),A0

		MOVE.L	OBJ_ADDR1(A1),A2
		MOVE.W	D0,D1
		JSR	OBJ_PR_ALLOCATE
		BRA.L	.deall
		BRA.L	.deall
		BRA.L	.end

		JSR	O_CALC_PATCHZ
		JSR	O_ALLOC_DEALL_S
		MOVE.L	A0,OBJ_ADDR1(A1)
		JMP	O_PR_SET0

.deall		JSR	O_DEALL_S
		CLR.L	OBJ_ADDR1(A1)
.end		RTS


FLM_SET_DATA	DC.L	OBJ_FLAME	;Object setup.
		DC.L	FHIT_GROUND	;Ground hit routine.
		DC.L	FHIT_OBJECT	;Object hit routine.
		DC.L	-60*$100		;YPOS offset.
		DC.L	110*$100	;Yheight.
		DC.W	0,11		;Up&down steps.
		DC.L	$10000		;Zlimit.
		DC.L	0		;Xlimit.

OBJ_FLAME	DC.L	OBJ_FLAME_SET
		DC.L	OBJ_FLAME_ANM0

OBJ_FLAME_ANM0	

		XYRATIO	100,30,100,40
RINC		=	6
		REPT	18
		OBJCNTR	0,0,26,15
		OBJSCL	0,0,0,0,26,29,FIRTST
		XYRATIO	100,(XRATIO_TO/$100+RINC),100,(XRATIO_TO/$100+RINC)
		ENDR

OBJ_FLAME_SET	DC.W	ID_BOTTLE	;OBJ_ID
		DC.L	O_T2M_MOVE	;OBJ_MOVE_CTRL
		DC.L	FLM_PRINT	;OBJ_PRN_CTRL
		DC.W	$20		;OBJ_ZSIZE
		XYSIZE	15,15
		DC.W	0		;OBJ_MASS
		DC.L	O_T2M_HIT	;OBJ_HIT_GOTO

; --------------------------------------------------------------------------

GRFLAME_SETUP	MOVE.L	A1,A2
		LEA	OBJ_GRFLAME,A6
		JSR	O_OBJECT_SETUP 
		BNE.S	.end

		JSR	RANDOM_NO
		AND.W	#$E0,D7
		MOVE.W	D7,OBJ_CNT0(A1)
		MOVE.L	#GRFLM_HIT,OBJ_ADDR7(A1)
		MOVE.L	OBJ_XPOS(A2),OBJ_XPOS(A1)
		MOVE.L	OBJ_YPOS(A2),OBJ_YPOS(A1)
		MOVE.W	OBJ_ZPOS(A2),OBJ_ZPOS(A1)

.end		MOVE.L	A2,A1
		RTS

GRFLM_CLEAR	JMP	O_CLEAR_S

GRFLM_PRINT	JSR	O_PR_ALLOCX
		BRA.L	GRFLM_CLEAR
		BRA.L	GRFLM_CLEAR
		BRA.L	GRFLM_CLEAR

		LEA	OBJ_GRFLAME_ANM0,A0
		MOVE.W	OBJ_CNT0(A1),D1
		ADD.W	#$20,D1
		AND.W	#$E0,D1
		MOVE.W	D1,OBJ_CNT0(A1)
		ADD.W	D1,A0

		JSR	O_CALC_PATCHZ
		MOVE.L	OBJ_ADDR1(A1),A2
		JSR	O_ALLOC_DEALL_S
		MOVE.L	A0,OBJ_ADDR1(A1)
		JMP	O_PR_SET0

GRFLM_HIT	ADDQ.W	#1,OBJ_SHOT_AMT(A2)	
		JSR	O_CLEAR_S

		MOVE.W	#SFX_FTFLMHIT_A,D0
		JMP	CSFX_ONESHOT_V

OBJ_GRFLAME	DC.L	OBJ_GRFLAME_SET
		DC.L	OBJ_GRFLAME_ANM0

OBJ_GRFLAME_ANM0	

		XYRATIO	100,200,100,200
		OBJCNTR	139,104,13,24

		OBJSCL	139,104,0,0,13,24,TNKFIR
		OBJSCL	140,104,14,0,13,24,TNKFIR
		
		XYRATIO	100,200,100,300
		OBJCNTR	139,104,13,24

		OBJSCL	139,105,28,0,14,23,TNKFIR
		OBJSCL	139,103,43,0,13,25,TNKFIR

		XYRATIO	100,200,100,400
		OBJCNTR	139,104,13,24

		OBJSCL	139,104,0,0,13,24,TNKFIR
		OBJSCL	140,104,14,0,13,24,TNKFIR
		
		XYRATIO	100,200,100,300
		OBJCNTR	139,104,13,24

		OBJSCL	139,105,28,0,14,23,TNKFIR
		OBJSCL	139,103,43,0,13,25,TNKFIR

OBJ_GRFLAME_SET	DC.W	ID_BOTTLE	;OBJ_ID
		DC.L	SIGN_NEXT	;OBJ_MOVE_CTRL
		DC.L	GRFLM_PRINT	;OBJ_PRN_CTRL
		DC.W	$30		;OBJ_ZSIZE
		XYSIZE	13,24
		DC.W	0		;OBJ_MASS
		DC.L	O_T2M_HIT	;OBJ_HIT_GOTO

; --------------------------------------------------------------------------

		XYRATIO	100,150,100,150
		OBJCNTR	0,0,0,0
OBJ_UMBREL	OBJSCL	0,-40,47,47,32,32,UMBREL

		XYRATIO	100,150,100,150
		OBJCNTR	130,34,50,75
OBJ_DUCK1
		DC.L	OBJ_DUCK_SET
		DC.L	OBJ_DUCK2_ANM0
		DC.L	OBJ_DUCK2_ANM0
		DC.L	OBJ_DUCK_SKID
		DC.L	OBJ_DUCK_DAM

OBJ_DUCK1_ANM0	DC.L	OBJ_DUCK_XVIEW,OBJ_DUCK_YVIEW

		OBJSCLM	134,34,0,0,57,76,DUCK03
		OBJSCLM	133,34,0,0,53,76,DUCK02
		OBJSCL	130,34,0,0,50,77,DUCK01
		OBJSCL	133,34,0,0,53,76,DUCK02
		OBJSCL	134,34,0,0,57,76,DUCK03
	 
OBJ_DUCK2
		DC.L	OBJ_DUCK_SET
		DC.L	OBJ_DUCK2_ANM0
		DC.L	OBJ_DUCK2_ANM0
		DC.L	OBJ_DUCK_SKID
		DC.L	OBJ_DUCK_DAM
	
OBJ_DUCK2_ANM0	DC.L	OBJ_DUCK_XVIEW,OBJ_DUCK_YVIEW

		OBJSCLM	134,34,64,0,57,76,DUCK03
		OBJSCLM	133,34,64,0,53,76,DUCK02
		OBJSCL	130,34,64,0,50,77,DUCK01
		OBJSCL	133,34,64,0,53,76,DUCK02
		OBJSCL	134,34,64,0,57,76,DUCK03
	 
OBJ_DUCK_XVIEW	DC.W	2*$20,$20
		DC.L	$3000,$7800,-1
OBJ_DUCK_YVIEW	DC.W	5*$20
		DC.W	-1

OBJ_DUCK_SKID	DC.W	0
		XSIZE	24
		XSIZE	-24

OBJ_DUCK_SET	DC.W	ID_CAR		;OBJ_ID
		DC.L	0		;OBJ_MOVE_CTRL
		DC.L	DUCK_PRINT	;OBJ_PRN_CTRL
		DC.W	$50		;OBJ_ZSIZE
		XYSIZE	50,75
		DC.W	$8070		;OBJ_MASS
		DC.L	HROUTINE_CAR	;OBJ_HIT_GOTO
		DC.W	$80*40		;OBJ_ZPOS
		DC.L	$100*200	;OBJ_XPOS
		DC.L	$100*0		;OBJ_YPOS
		DC.W	$40		;OBJ_SPD_MAXA
		DC.W	$A0		;OBJ_SPD_MAXB
		DC.W	10		;OBJ_SPD_INCFA
		DC.W	20		;OBJ_SPD_INCFB
		DC.W	20		;OBJ_SPD_DECF
		DC.W	5		;OBJ_SPD_BRAKE
		DC.W	$0808		;OBJ_TRACTION

OBJ_DUCK_DAM	DC.W	($FFFF/$240)/10,$FFFF/100
		DC.W	1*$FFFF/6
		DC.L	OBJ_DUCK_DPL,DAM_SET0
		DC.W	2*$FFFF/6
		DC.L	OBJ_DUCK_DPL,DAM_SET0
		DC.W	3*$FFFF/6
		DC.L	OBJ_DUCK_DPL,DAM_SET0
		DC.W	4*$FFFF/6
		DC.L	OBJ_DUCK_DPL,DAM_SET0
		DC.W	5*$FFFF/6
		DC.L	OBJ_DUCK_DPL,DAM_SET0
		DC.W	$FFFF
		DC.L	LOGIC_DEATH1,LOGIC_SET0
		DC.L	0,DUCK_KILL

OBJ_DUCK_KILL	DC.W	$0040,5-1
		DC.L	VIS_EXPLD_C1
		DC.L	VIS_EXPLD_C2
		DC.L	VIS_EXPLD_C3
		DC.L	VIS_EXPLD_C4
		DC.L	VIS_EXPLD_C5
		DC.W	30,30-1,1,6
		DC.L	VIS_DOOR
		DC.L	VIS_PIPE
		DC.L	VIS_BUMP
		DC.L	VIS_WHEL
		DC.L	VIS_PIECE1
		DC.L	VIS_PIECE2

OBJ_DUCK_DPL	DC.W	5
		DC.L	OBJ_DUCK_DP1
		DC.L	OBJ_DUCK_DP2
		DC.L	OBJ_DUCK_DP3
		DC.L	OBJ_DUCK_DP4
		DC.L	OBJ_DUCK_DP5

OBJ_DUCK_DP1	DC.L	VIS_FLAME1,VIS_EXPCTRL_L
		DC.L	OBJ_D_XVIEW,OBJ_D_YVIEW
		DAMPTS	$11,134,96,$10,134,95,$10,135,92
OBJ_DUCK_DP2	DC.L	VIS_FLAME2M,VIS_EXPCTRL_B
		DC.L	OBJ_D_XVIEW,OBJ_D_YVIEW
		DAMPTS	$11,157,35,$11,170,35,$11,178,35
OBJ_DUCK_DP3	DC.L	VIS_FLAME0M,VIS_EXPCTRL_R
		DC.L	OBJ_D_XVIEW,OBJ_D_YVIEW
		DAMPTS	$11,174,82,$11,174,84,$11,174,85
OBJ_DUCK_DP4	DC.L	VIS_FLAME2M,VIS_EXPCTRL_R
		DC.L	OBJ_D_XVIEW,OBJ_D_YVIEW
		DAMPTS	$00,179,91,$01,183,91,$01,187,90
OBJ_DUCK_DP5	DC.L	VIS_FLAME2,VIS_EXPCTRL_L
		DC.L	OBJ_D_XVIEW,OBJ_D_YVIEW
		DAMPTSM	$00,179,91,$01,183,91,$01,187,90

OBJ_D_XVIEW	DC.W	2*10,10
		DC.L	$3000,$7800,-1
OBJ_D_YVIEW	DC.W	0,-1

; --------------------------------------------------------------------------

LOGIC_DUCK1
 	IFTRUE
    	BATRANGE 1,12;CHANGED 18 TO 10
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 24
		ELSE_IFTRUE
			GRIDRANGE 1,11,8,23
			GRIDGOTOXY 16,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 16,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 16,5
		ELSE_IFTRUE
			GRIDRANGE 12,21,8,23
			GRIDGOTOXY 16,10
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOY 9
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOXY 6,24
		ELSE_IFTRUE
			GRIDRANGE 22,32,8,23
			GRIDGOTOXY 24,10
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 24,9 
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 24,6
		IFEND
    	ELSE_IFTRUEx   	
      	BATRANGE 12,16
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 24
		ELSE_IFTRUE
			GRIDRANGE 1,11,8,23
			GRIDGOTOXY 8,10
	  	ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOY 9
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOY 6
		ELSE_IFTRUE	
			GRIDRANGE 12,21,8,23
			GRIDGOTOXY 24,10 
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 24,9
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOXY 24,6
		ELSE_IFTRUE
			GRIDRANGE 22,32,8,23
			GRIDGOTOXY 24,10
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 24,9
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 24,6
		IFEND  
  	ELSE_IFTRUE
	BATRANGE 17,22
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 8
		ELSE_IFTRUE
			GRIDRANGE 1,11,8,23
			GRIDGOTOXY 8,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 8,9
	        ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE	
			GRIDRANGE 12,21,8,23
			GRIDGOTOXY 8,10 
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 8,9
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE
			GRIDRANGE 22,32,8,23
			GRIDGOTOXY 24,10
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 24,9
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 24,6
		IFEND
    	ELSE_IFTRUE
	BATRANGE 22,32
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 8
		ELSE_IFTRUE
			GRIDRANGE 1,11,8,23
			GRIDGOTOXY 8,10
 		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 8,9
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 8,6	
	       	ELSE_IFTRUE
			GRIDRANGE 12,21,8,23
			GRIDGOTOXY 8,10       
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 8,9
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE
			GRIDRANGE 22,32,8,23
			GRIDGOTOXY 14,10
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 14,9
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 14,6
		     
		IFEND
	IFEND
	LOGICEND		       			

; --------------------------------------------------------------------------

LOGIC_DUCK2
	IFTRUE
    	BATRANGE 1,8
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 5
		ELSE_IFTRUE
			GRIDRANGE 1,32,8,23
			GRIDGOTOXY 5,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 16,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 16,5
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOY 10
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOXY 24,6
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 24,9 
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 24,6
		IFEND
    		
 	ELSE_IFTRUEx
    	BATRANGE 9,16
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 13
		ELSE_IFTRUE
			GRIDRANGE 1,32,8,23
			GRIDGOTOXY 10,13
	  	ELSE_IFTRUE
			GRIDRANGE 1,8,3,7
			GRIDGOTOY 10
		ELSE_IFTRUE
			GRIDRANGE 1,8,1,2
			GRIDGOTOY 6
		ELSE_IFTRUE
			GRIDRANGE 9,16,3,7
			GRIDGOTOXY 24,10
		ELSE_IFTRUE
			GRIDRANGE 9,16,1,2
			GRIDGOTOXY 24,6
		ELSE_IFTRUE
			GRIDRANGE 17,32,3,7
			GRIDGOTOXY 24,10
	        ELSE_IFTRUE
			GRIDRANGE 17,32,1,2
			GRIDGOTOXY 24,6
		IFEND  
    	   
 	ELSE_IFTRUE
    	BATRANGE 17,24
    	      	IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 21
		ELSE_IFTRUE
			GRIDRANGE 1,32,8,23
			GRIDGOTOXY 21,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 8,10
	        ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE
			GRIDRANGE 12,16,3,7
			GRIDGOTOXY 8,9
		ELSE_IFTRUE
			GRIDRANGE 12,16,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE
			GRIDRANGE 17,32,3,7
			GRIDGOTOXY 12,9
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 12,6
		IFEND
 	
 	ELSE_IFTRUE
    	BATRANGE 25,32
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 29
		ELSE_IFTRUE
			GRIDRANGE 1,32,8,23
			GRIDGOTOXY 29,10
 		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 8,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 8,6	
	       	ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 8,10
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 14,9
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 14,6
		     
		IFEND
	IFEND
	LOGICEND		       			

; --------------------------------------------------------------------------

LOGIC_DUCK3
	IFTRUE
    	BATRANGE 1,8
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 5
		ELSE_IFTRUE
			GRIDRANGE 1,32,8,23
			GRIDGOTOXY 5,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 16,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 16,5
		ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOY 10
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOXY 24,6
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 24,9 
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 24,6
		IFEND
    		
 	ELSE_IFTRUEx
    	BATRANGE 9,16
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 13
		ELSE_IFTRUE
			GRIDRANGE 1,32,8,23
			GRIDGOTOXY 10,13
	  	ELSE_IFTRUE
			GRIDRANGE 1,8,3,7
			GRIDGOTOY 10
		ELSE_IFTRUE
			GRIDRANGE 1,8,1,2
			GRIDGOTOY 6
		ELSE_IFTRUE
			GRIDRANGE 9,16,3,7
			GRIDGOTOXY 24,10
		ELSE_IFTRUE
			GRIDRANGE 9,16,1,2
			GRIDGOTOXY 24,6
		ELSE_IFTRUE
			GRIDRANGE 17,32,3,7
			GRIDGOTOXY 24,10
	        ELSE_IFTRUE
			GRIDRANGE 17,32,1,2
			GRIDGOTOXY 24,6
		IFEND  
    	   
 	ELSE_IFTRUE
    	BATRANGE 17,24
    	      	IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 21
		ELSE_IFTRUE
			GRIDRANGE 1,32,8,23
			GRIDGOTOXY 21,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 8,10
	        ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE
			GRIDRANGE 12,16,3,7
			GRIDGOTOXY 8,9
		ELSE_IFTRUE
			GRIDRANGE 12,16,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE
			GRIDRANGE 17,32,3,7
			GRIDGOTOXY 12,9
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 12,6
		IFEND
 	
 	ELSE_IFTRUE
    	BATRANGE 25,32
    		IFTRUE
    			GRIDRANGE 1,32,24,64
    			GRIDGOTOX 29
		ELSE_IFTRUE
			GRIDRANGE 1,32,8,23
			GRIDGOTOXY 29,10
 		ELSE_IFTRUE
			GRIDRANGE 1,11,3,7
			GRIDGOTOXY 8,10
		ELSE_IFTRUE
			GRIDRANGE 1,11,1,2
			GRIDGOTOXY 8,6	
	       	ELSE_IFTRUE
			GRIDRANGE 12,21,3,7
			GRIDGOTOXY 8,10
		ELSE_IFTRUE
			GRIDRANGE 12,21,1,2
			GRIDGOTOXY 8,6
		ELSE_IFTRUE
			GRIDRANGE 22,32,3,7
			GRIDGOTOXY 14,9
	        ELSE_IFTRUE
			GRIDRANGE 22,32,1,2
			GRIDGOTOXY 14,6
		     
		IFEND
	IFEND
	LOGICEND		       			

; --------------------------------------------------------------------------

		EVEN

; --------------------------------------------------------------------------

